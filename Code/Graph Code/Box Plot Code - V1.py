import os
import glob
import pandas as pd
import matplotlib.pyplot as plt

def generate_box_plots_1200_dpi():
    """
    This script creates a separate 1200 DPI box plot for each noise type, showing
    Accuracy vs. k-value, from all CSV files generated by the QkNN code.

    All CSV files are assumed to reside under the absolute folder path:
      C:\\Users\\azhme\\OneDrive - Clear Creek ISD\\Files\\School\\11th Grade\\AP Capstone Research\\Parts Of Research Paper\\APResearchCode\\CSV Outputs

    The script will load every CSV that matches each noise type's naming pattern,
    concatenate them, and produce a single box plot for each noise type with
    k on the x-axis and Accuracy on the y-axis. Each plot is saved at 1200 DPI.
    """

    # Absolute path to the folder containing all CSV outputs
    csv_folder = r"C:\Users\azhme\OneDrive - Clear Creek ISD\Files\School\11th Grade\AP Capstone Research\Parts Of Research Paper\APResearchCode\CSV Outputs"

    # Noise types that appear in the CSV filenames
    noise_types = [
        "Noiseless",
        "Noisy",
        "TwoQubit",
        "ZRotation",
        "TwoQubitXRotation",
        "T1Relaxation",
        "T2Dephasing",
        "MeasurementError",
        "Combined"
    ]

    # Loop over each noise type and create a box plot
    for noise in noise_types:
        # Use a glob pattern to find all CSV files that match this noise type
        pattern = os.path.join(csv_folder, f"Iris_QkNN_Run_*_{noise}_*.csv")
        matching_files = glob.glob(pattern)

        # If no files found for a noise type, just skip
        if not matching_files:
            print(f"No CSV files found for noise type: {noise}")
            continue

        # Load and concatenate all runs for this noise type
        df_list = []
        for csv_file in matching_files:
            df_list.append(pd.read_csv(csv_file))
        combined_df = pd.concat(df_list, ignore_index=True)

        # Create a figure (separate for each noise), with 1200 DPI
        plt.figure(dpi=1200)

        # Make a box plot: x-axis is 'k', y-axis is 'Accuracy'
        # One approach is to let pandas handle grouping for us:
        # boxplot(column=..., by=...) automatically groups by the 'by' argument
        box_plot = combined_df.boxplot(column="Accuracy", by="k")

        # The default boxplot call with 'by=' sets a subtitle we don't need
        plt.suptitle("")
        plt.title(f"Accuracy vs. k for Noise: {noise}")
        plt.xlabel("k value")
        plt.ylabel("Accuracy")

        # Build the output filename for saving
        output_filename = os.path.join(
            csv_folder, f"BoxPlot_{noise}_Accuracy_vs_k.png"
        )
        plt.savefig(output_filename, bbox_inches="tight")
        plt.close()

        print(f"Box plot saved for noise type '{noise}' at: {output_filename}")


if __name__ == "__main__":
    generate_box_plots_1200_dpi()
